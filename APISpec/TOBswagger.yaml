swagger: '2.0'
info:
  version: v1
  title: REST API Documentation for TheOrgBook
  description: TheOrgBook is a repository for Verifiable Claims made about Organizations related to a known foundational Verifiable Claim. See https://github.com/bcgov/VON
  termsOfService: N/A
basePath: /api/v1
paths:
  /verifiableorgs:
    get:
      tags:
        - VerifiableOrg
      summary: Lists available VerifiableOrg objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/VerifiableOrg"
    post:
      tags:
        - VerifiableOrg
      x-codegen-operation: create
      summary: Creates a new VerifiableOrg object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/VerifiableOrg"
      responses:
        201:
          description: VerifiableOrg created
          headers:
            Location:
              description: A link to the VerifiableOrg
              type: string
              format: url
          schema:
            $ref: "#/definitions/VerifiableOrg"  
  /verifiableorgs/bulk:
    post:
      tags:
        - VerifiableOrg
      summary: Bulk create / update a number of VerifiableOrg object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/VerifiableOrg"
      responses:
        201:
          description: VerifiableOrg created
  /verifiableorgs/{id}:
    get:
      tags:
        - VerifiableOrg
      summary: Gets a specific VerifiableOrg object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/VerifiableOrg"
        404:
          description: VerifiableOrg not found
      parameters:
        - name: id
          in: path
          description: id of VerifiableOrg to fetch
          required: true
          type: integer
    put:
      tags:
        - VerifiableOrg
      x-codegen-operation: update
      summary: Updates a specific VerifiableOrg object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/VerifiableOrg"
        404:
          description: VerifiableOrg not found
      parameters:
        - name: id
          in: path
          description: id of VerifiableOrg to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/VerifiableOrg"
  /verifiableorgs/{id}/delete:
    post:
      tags:
        - VerifiableOrg
      x-codegen-operation: destroy
      summary: Deletes a specific VerifiableOrg object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: VerifiableOrg not found
      parameters:
        - name: id
          in: path
          description: id of VerifiableOrg to delete
          required: true
          type: integer
  /verifiableorgtypes:
    get:
      tags:
        - VerifiableOrgType
      summary: Lists available VerifiableOrgType objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/VerifiableOrgType"
    post:
      tags:
        - VerifiableOrgType
      x-codegen-operation: create
      summary: Creates a new VerifiableOrgType object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/VerifiableOrgType"
      responses:
        201:
          description: VerifiableOrgType created
          headers:
            Location:
              description: A link to the VerifiableOrgType
              type: string
              format: url
          schema:
            $ref: "#/definitions/VerifiableOrgType"  
  /verifiableorgtypes/bulk:
    post:
      tags:
        - VerifiableOrgType
      summary: Bulk create / update a number of VerifiableOrgType object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/VerifiableOrgType"
      responses:
        201:
          description: VerifiableOrgType created
  /verifiableorgtypes/{id}:
    get:
      tags:
        - VerifiableOrgType
      summary: Gets a specific VerifiableOrgType object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/VerifiableOrgType"
        404:
          description: VerifiableOrgType not found
      parameters:
        - name: id
          in: path
          description: id of VerifiableOrgType to fetch
          required: true
          type: integer
    put:
      tags:
        - VerifiableOrgType
      x-codegen-operation: update
      summary: Updates a specific VerifiableOrgType object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/VerifiableOrgType"
        404:
          description: VerifiableOrgType not found
      parameters:
        - name: id
          in: path
          description: id of VerifiableOrgType to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/VerifiableOrgType"
  /verifiableorgtypes/{id}/delete:
    post:
      tags:
        - VerifiableOrgType
      x-codegen-operation: destroy
      summary: Deletes a specific VerifiableOrgType object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: VerifiableOrgType not found
      parameters:
        - name: id
          in: path
          description: id of VerifiableOrgType to delete
          required: true
          type: integer
  /locations:
    get:
      tags:
        - Location
      summary: Lists available Location objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Location"
    post:
      tags:
        - Location
      x-codegen-operation: create
      summary: Creates a new Location object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Location"
      responses:
        201:
          description: Location created
          headers:
            Location:
              description: A link to the Location
              type: string
              format: url
          schema:
            $ref: "#/definitions/Location"  
  /locations/bulk:
    post:
      tags:
        - Location
      summary: Bulk create / update a number of Location object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Location"
      responses:
        201:
          description: Location created
  /locations/{id}:
    get:
      tags:
        - Location
      summary: Gets a specific Location object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Location"
        404:
          description: Location not found
      parameters:
        - name: id
          in: path
          description: id of Location to fetch
          required: true
          type: integer
    put:
      tags:
        - Location
      x-codegen-operation: update
      summary: Updates a specific Location object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Location"
        404:
          description: Location not found
      parameters:
        - name: id
          in: path
          description: id of Location to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Location"
  /locations/{id}/delete:
    post:
      tags:
        - Location
      x-codegen-operation: destroy
      summary: Deletes a specific Location object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Location not found
      parameters:
        - name: id
          in: path
          description: id of Location to delete
          required: true
          type: integer
  /locationtypes:
    get:
      tags:
        - LocationType
      summary: Lists available LocationType objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/LocationType"
    post:
      tags:
        - LocationType
      x-codegen-operation: create
      summary: Creates a new LocationType object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/LocationType"
      responses:
        201:
          description: LocationType created
          headers:
            Location:
              description: A link to the LocationType
              type: string
              format: url
          schema:
            $ref: "#/definitions/LocationType"  
  /locationtypes/bulk:
    post:
      tags:
        - LocationType
      summary: Bulk create / update a number of LocationType object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/LocationType"
      responses:
        201:
          description: LocationType created
  /locationtypes/{id}:
    get:
      tags:
        - LocationType
      summary: Gets a specific LocationType object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LocationType"
        404:
          description: LocationType not found
      parameters:
        - name: id
          in: path
          description: id of LocationType to fetch
          required: true
          type: integer
    put:
      tags:
        - LocationType
      x-codegen-operation: update
      summary: Updates a specific LocationType object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LocationType"
        404:
          description: LocationType not found
      parameters:
        - name: id
          in: path
          description: id of LocationType to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/LocationType"
  /locationtypes/{id}/delete:
    post:
      tags:
        - LocationType
      x-codegen-operation: destroy
      summary: Deletes a specific LocationType object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: LocationType not found
      parameters:
        - name: id
          in: path
          description: id of LocationType to delete
          required: true
          type: integer
  /doingbusinessas:
    get:
      tags:
        - DoingBusinessAs
      summary: Lists available DoingBusinessAs objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/DoingBusinessAs"
    post:
      tags:
        - DoingBusinessAs
      x-codegen-operation: create
      summary: Creates a new DoingBusinessAs object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/DoingBusinessAs"
      responses:
        201:
          description: DoingBusinessAs created
          headers:
            Location:
              description: A link to the DoingBusinessAs
              type: string
              format: url
          schema:
            $ref: "#/definitions/DoingBusinessAs"  
  /doingbusinessas/bulk:
    post:
      tags:
        - DoingBusinessAs
      summary: Bulk create / update a number of DoingBusinessAs object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/DoingBusinessAs"
      responses:
        201:
          description: DoingBusinessAs created
  /doingbusinessas/{id}:
    get:
      tags:
        - DoingBusinessAs
      summary: Gets a specific DoingBusinessAs object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/DoingBusinessAs"
        404:
          description: DoingBusinessAs not found
      parameters:
        - name: id
          in: path
          description: id of DoingBusinessAs to fetch
          required: true
          type: integer
    put:
      tags:
        - DoingBusinessAs
      x-codegen-operation: update
      summary: Updates a specific DoingBusinessAs object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/DoingBusinessAs"
        404:
          description: DoingBusinessAs not found
      parameters:
        - name: id
          in: path
          description: id of DoingBusinessAs to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/DoingBusinessAs"
  /doingbusinessas/{id}/delete:
    post:
      tags:
        - DoingBusinessAs
      x-codegen-operation: destroy
      summary: Deletes a specific DoingBusinessAs object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: DoingBusinessAs not found
      parameters:
        - name: id
          in: path
          description: id of DoingBusinessAs to delete
          required: true
          type: integer
  /verifiableclaims:
    get:
      tags:
        - VerifiableClaim
      summary: Lists available VerifiableClaim objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/VerifiableClaim"
    post:
      tags:
        - VerifiableClaim
      x-codegen-operation: create
      summary: Creates a new VerifiableClaim object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/VerifiableClaim"
      responses:
        201:
          description: VerifiableClaim created
          headers:
            Location:
              description: A link to the VerifiableClaim
              type: string
              format: url
          schema:
            $ref: "#/definitions/VerifiableClaim"  
  /verifiableclaims/bulk:
    post:
      tags:
        - VerifiableClaim
      summary: Bulk create / update a number of VerifiableClaim object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/VerifiableClaim"
      responses:
        201:
          description: VerifiableClaim created
  /verifiableclaims/{id}:
    get:
      tags:
        - VerifiableClaim
      summary: Gets a specific VerifiableClaim object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/VerifiableClaim"
        404:
          description: VerifiableClaim not found
      parameters:
        - name: id
          in: path
          description: id of VerifiableClaim to fetch
          required: true
          type: integer
    put:
      tags:
        - VerifiableClaim
      x-codegen-operation: update
      summary: Updates a specific VerifiableClaim object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/VerifiableClaim"
        404:
          description: VerifiableClaim not found
      parameters:
        - name: id
          in: path
          description: id of VerifiableClaim to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/VerifiableClaim"
  /verifiableclaims/{id}/delete:
    post:
      tags:
        - VerifiableClaim
      x-codegen-operation: destroy
      summary: Deletes a specific VerifiableClaim object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: VerifiableClaim not found
      parameters:
        - name: id
          in: path
          description: id of VerifiableClaim to delete
          required: true
          type: integer
  /verifiableclaimtypes:
    get:
      tags:
        - VerifiableClaimType
      summary: Lists available VerifiableClaimType objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/VerifiableClaimType"
    post:
      tags:
        - VerifiableClaimType
      x-codegen-operation: create
      summary: Creates a new VerifiableClaimType object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/VerifiableClaimType"
      responses:
        201:
          description: VerifiableClaimType created
          headers:
            Location:
              description: A link to the VerifiableClaimType
              type: string
              format: url
          schema:
            $ref: "#/definitions/VerifiableClaimType"  
  /verifiableclaimtypes/bulk:
    post:
      tags:
        - VerifiableClaimType
      summary: Bulk create / update a number of VerifiableClaimType object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/VerifiableClaimType"
      responses:
        201:
          description: VerifiableClaimType created
  /verifiableclaimtypes/{id}:
    get:
      tags:
        - VerifiableClaimType
      summary: Gets a specific VerifiableClaimType object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/VerifiableClaimType"
        404:
          description: VerifiableClaimType not found
      parameters:
        - name: id
          in: path
          description: id of VerifiableClaimType to fetch
          required: true
          type: integer
    put:
      tags:
        - VerifiableClaimType
      x-codegen-operation: update
      summary: Updates a specific VerifiableClaimType object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/VerifiableClaimType"
        404:
          description: VerifiableClaimType not found
      parameters:
        - name: id
          in: path
          description: id of VerifiableClaimType to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/VerifiableClaimType"
  /verifiableclaimtypes/{id}/delete:
    post:
      tags:
        - VerifiableClaimType
      x-codegen-operation: destroy
      summary: Deletes a specific VerifiableClaimType object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: VerifiableClaimType not found
      parameters:
        - name: id
          in: path
          description: id of VerifiableClaimType to delete
          required: true
          type: integer
  /inactiveclaimreasons:
    get:
      tags:
        - InactiveClaimReason
      summary: Lists available InactiveClaimReason objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/InactiveClaimReason"
    post:
      tags:
        - InactiveClaimReason
      x-codegen-operation: create
      summary: Creates a new InactiveClaimReason object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/InactiveClaimReason"
      responses:
        201:
          description: InactiveClaimReason created
          headers:
            Location:
              description: A link to the InactiveClaimReason
              type: string
              format: url
          schema:
            $ref: "#/definitions/InactiveClaimReason"  
  /inactiveclaimreasons/bulk:
    post:
      tags:
        - InactiveClaimReason
      summary: Bulk create / update a number of InactiveClaimReason object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/InactiveClaimReason"
      responses:
        201:
          description: InactiveClaimReason created
  /inactiveclaimreasons/{id}:
    get:
      tags:
        - InactiveClaimReason
      summary: Gets a specific InactiveClaimReason object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/InactiveClaimReason"
        404:
          description: InactiveClaimReason not found
      parameters:
        - name: id
          in: path
          description: id of InactiveClaimReason to fetch
          required: true
          type: integer
    put:
      tags:
        - InactiveClaimReason
      x-codegen-operation: update
      summary: Updates a specific InactiveClaimReason object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/InactiveClaimReason"
        404:
          description: InactiveClaimReason not found
      parameters:
        - name: id
          in: path
          description: id of InactiveClaimReason to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/InactiveClaimReason"
  /inactiveclaimreasons/{id}/delete:
    post:
      tags:
        - InactiveClaimReason
      x-codegen-operation: destroy
      summary: Deletes a specific InactiveClaimReason object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: InactiveClaimReason not found
      parameters:
        - name: id
          in: path
          description: id of InactiveClaimReason to delete
          required: true
          type: integer
  /issuerservices:
    get:
      tags:
        - IssuerService
      summary: Lists available IssuerService objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/IssuerService"
    post:
      tags:
        - IssuerService
      x-codegen-operation: create
      summary: Creates a new IssuerService object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/IssuerService"
      responses:
        201:
          description: IssuerService created
          headers:
            Location:
              description: A link to the IssuerService
              type: string
              format: url
          schema:
            $ref: "#/definitions/IssuerService"  
  /issuerservices/bulk:
    post:
      tags:
        - IssuerService
      summary: Bulk create / update a number of IssuerService object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/IssuerService"
      responses:
        201:
          description: IssuerService created
  /issuerservices/{id}:
    get:
      tags:
        - IssuerService
      summary: Gets a specific IssuerService object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/IssuerService"
        404:
          description: IssuerService not found
      parameters:
        - name: id
          in: path
          description: id of IssuerService to fetch
          required: true
          type: integer
    put:
      tags:
        - IssuerService
      x-codegen-operation: update
      summary: Updates a specific IssuerService object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/IssuerService"
        404:
          description: IssuerService not found
      parameters:
        - name: id
          in: path
          description: id of IssuerService to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/IssuerService"
  /issuerservices/{id}/delete:
    post:
      tags:
        - IssuerService
      x-codegen-operation: destroy
      summary: Deletes a specific IssuerService object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: IssuerService not found
      parameters:
        - name: id
          in: path
          description: id of IssuerService to delete
          required: true
          type: integer
  /jurisdictions:
    get:
      tags:
        - Jurisdiction
      summary: Lists available Jurisdiction objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Jurisdiction"
    post:
      tags:
        - Jurisdiction
      x-codegen-operation: create
      summary: Creates a new Jurisdiction object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Jurisdiction"
      responses:
        201:
          description: Jurisdiction created
          headers:
            Location:
              description: A link to the Jurisdiction
              type: string
              format: url
          schema:
            $ref: "#/definitions/Jurisdiction"  
  /jurisdictions/bulk:
    post:
      tags:
        - Jurisdiction
      summary: Bulk create / update a number of Jurisdiction object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Jurisdiction"
      responses:
        201:
          description: Jurisdiction created
  /jurisdictions/{id}:
    get:
      tags:
        - Jurisdiction
      summary: Gets a specific Jurisdiction object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Jurisdiction"
        404:
          description: Jurisdiction not found
      parameters:
        - name: id
          in: path
          description: id of Jurisdiction to fetch
          required: true
          type: integer
    put:
      tags:
        - Jurisdiction
      x-codegen-operation: update
      summary: Updates a specific Jurisdiction object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Jurisdiction"
        404:
          description: Jurisdiction not found
      parameters:
        - name: id
          in: path
          description: id of Jurisdiction to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Jurisdiction"
  /jurisdictions/{id}/delete:
    post:
      tags:
        - Jurisdiction
      x-codegen-operation: destroy
      summary: Deletes a specific Jurisdiction object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Jurisdiction not found
      parameters:
        - name: id
          in: path
          description: id of Jurisdiction to delete
          required: true
          type: integer
  /users:
    get:
      tags:
        - User
      summary: Lists available User objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
    post:
      tags:
        - User
      x-codegen-operation: create
      summary: Creates a new User object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: User created
          headers:
            Location:
              description: A link to the User
              type: string
              format: url
          schema:
            $ref: "#/definitions/User"  
  /users/bulk:
    post:
      tags:
        - User
      summary: Bulk create / update a number of User object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
      responses:
        201:
          description: User created
  /users/{id}:
    get:
      tags:
        - User
      summary: Gets a specific User object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/User"
        404:
          description: User not found
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
    put:
      tags:
        - User
      x-codegen-operation: update
      summary: Updates a specific User object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/User"
        404:
          description: User not found
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
  /users/{id}/delete:
    post:
      tags:
        - User
      x-codegen-operation: destroy
      summary: Deletes a specific User object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: User not found
      parameters:
        - name: id
          in: path
          description: id of User to delete
          required: true
          type: integer
  /roles:
    get:
      tags:
        - Role
      summary: Lists available Role objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Role"
    post:
      tags:
        - Role
      x-codegen-operation: create
      summary: Creates a new Role object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Role"
      responses:
        201:
          description: Role created
          headers:
            Location:
              description: A link to the Role
              type: string
              format: url
          schema:
            $ref: "#/definitions/Role"  
  /roles/bulk:
    post:
      tags:
        - Role
      summary: Bulk create / update a number of Role object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Role"
      responses:
        201:
          description: Role created
  /roles/{id}:
    get:
      tags:
        - Role
      summary: Gets a specific Role object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Role"
        404:
          description: Role not found
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
    put:
      tags:
        - Role
      x-codegen-operation: update
      summary: Updates a specific Role object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Role"
        404:
          description: Role not found
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Role"
  /roles/{id}/delete:
    post:
      tags:
        - Role
      x-codegen-operation: destroy
      summary: Deletes a specific Role object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Role not found
      parameters:
        - name: id
          in: path
          description: id of Role to delete
          required: true
          type: integer
  /userroles:
    get:
      tags:
        - UserRole
      summary: Lists available UserRole objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRole"
    post:
      tags:
        - UserRole
      x-codegen-operation: create
      summary: Creates a new UserRole object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserRole"
      responses:
        201:
          description: UserRole created
          headers:
            Location:
              description: A link to the UserRole
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserRole"  
  /userroles/bulk:
    post:
      tags:
        - UserRole
      summary: Bulk create / update a number of UserRole object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRole"
      responses:
        201:
          description: UserRole created
  /userroles/{id}:
    get:
      tags:
        - UserRole
      summary: Gets a specific UserRole object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserRole"
        404:
          description: UserRole not found
      parameters:
        - name: id
          in: path
          description: id of UserRole to fetch
          required: true
          type: integer
    put:
      tags:
        - UserRole
      x-codegen-operation: update
      summary: Updates a specific UserRole object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserRole"
        404:
          description: UserRole not found
      parameters:
        - name: id
          in: path
          description: id of UserRole to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserRole"
  /userroles/{id}/delete:
    post:
      tags:
        - UserRole
      x-codegen-operation: destroy
      summary: Deletes a specific UserRole object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: UserRole not found
      parameters:
        - name: id
          in: path
          description: id of UserRole to delete
          required: true
          type: integer
  /permissions:
    get:
      tags:
        - Permission
      summary: Lists available Permission objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Permission"
    post:
      tags:
        - Permission
      x-codegen-operation: create
      summary: Creates a new Permission object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Permission"
      responses:
        201:
          description: Permission created
          headers:
            Location:
              description: A link to the Permission
              type: string
              format: url
          schema:
            $ref: "#/definitions/Permission"  
  /permissions/bulk:
    post:
      tags:
        - Permission
      summary: Bulk create / update a number of Permission object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Permission"
      responses:
        201:
          description: Permission created
  /permissions/{id}:
    get:
      tags:
        - Permission
      summary: Gets a specific Permission object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Permission"
        404:
          description: Permission not found
      parameters:
        - name: id
          in: path
          description: id of Permission to fetch
          required: true
          type: integer
    put:
      tags:
        - Permission
      x-codegen-operation: update
      summary: Updates a specific Permission object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Permission"
        404:
          description: Permission not found
      parameters:
        - name: id
          in: path
          description: id of Permission to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Permission"
  /permissions/{id}/delete:
    post:
      tags:
        - Permission
      x-codegen-operation: destroy
      summary: Deletes a specific Permission object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Permission not found
      parameters:
        - name: id
          in: path
          description: id of Permission to delete
          required: true
          type: integer
  /rolepermissions:
    get:
      tags:
        - RolePermission
      summary: Lists available RolePermission objects
      x-codegen-operation: list
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/RolePermission"
    post:
      tags:
        - RolePermission
      x-codegen-operation: create
      summary: Creates a new RolePermission object            
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RolePermission"
      responses:
        201:
          description: RolePermission created
          headers:
            Location:
              description: A link to the RolePermission
              type: string
              format: url
          schema:
            $ref: "#/definitions/RolePermission"  
  /rolepermissions/bulk:
    post:
      tags:
        - RolePermission
      summary: Bulk create / update a number of RolePermission object      
      x-codegen-operation: bulk
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/RolePermission"
      responses:
        201:
          description: RolePermission created
  /rolepermissions/{id}:
    get:
      tags:
        - RolePermission
      summary: Gets a specific RolePermission object      
      x-codegen-operation: retrieve
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RolePermission"
        404:
          description: RolePermission not found
      parameters:
        - name: id
          in: path
          description: id of RolePermission to fetch
          required: true
          type: integer
    put:
      tags:
        - RolePermission
      x-codegen-operation: update
      summary: Updates a specific RolePermission object      
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RolePermission"
        404:
          description: RolePermission not found
      parameters:
        - name: id
          in: path
          description: id of RolePermission to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RolePermission"
  /rolepermissions/{id}/delete:
    post:
      tags:
        - RolePermission
      x-codegen-operation: destroy
      summary: Deletes a specific RolePermission object      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: RolePermission not found
      parameters:
        - name: id
          in: path
          description: id of RolePermission to delete
          required: true
          type: integer
  /verifiedorgs/{id}/verifiableclaims:
    get:
      summary: Returns the Verifiable Claims for a Verifiable Organization
      tags:
        - VerifiableOrg
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of VerifiableOrg for which to fetch VerifiableClaims
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/VerifiableClaim"
        404:
           description: User not found
  /roles/{id}/permissions:
    get:
      summary: Get all the permissions for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
    put:
      summary: Updates the permissions for a role
      x-operation-ignore: YES
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
          description: Role not found
    post:
      summary: Adds a permissions to a role
      x-operation-ignore: YES
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/PermissionViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
          description: Role not found
  /roles/{id}/users:
    get:
      summary: Gets all the users for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
    put:
      summary: Updates the users for a role
      x-operation-ignore: YES
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
          description: Role not found
  /users/current:
    get:
      summary: Get the currently logged in user
      tags:
        - CurrentUser
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CurrentUserViewModel"
  /users/search:
    get:
      summary: Searches Users
      description:
        Used for the search users.
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: fuelSuppliers
          in: query
          description: FuelSupplier (array of id numbers)
          collectionFormat: multi
          type: array
          items:
            type: integer
        - name: surname
          in: query
          type: string
        - name: includeInactive
          in: query
          description: True if Inactive users will be returned
          type: boolean
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserViewModel"
  /users/{id}/roles:
    get:
      summary: Returns the roles for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
           description: User not found
    post:
      summary: Adds a role to a user
      x-operation-ignore: YES
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserRoleViewModel"
      responses:
        201:
          description: Role created for user
          headers:
            Location:
              description: A link to the User Role
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserRoleViewModel"
    put:
      summary: Updates the roles for a user
      x-operation-ignore: YES
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
          description: User not found
  /users/{id}/permissions:
    get:
      summary: Returns the set of permissions for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
           description: User not found
definitions:
  VerifiableOrg:
    type: object
    description: Information about a Verifiable organization in the database.
    required:
      - id
      - orgId
      - orgTypeId
      - jurisdictionId
      - legalName
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Verifiable Organization.
      orgId:
        type: string
        uniqueItems: true
        description: The primary key for the Verifiable Organization. This is a value that is likely published to and known by the Verifiable Organzation and entites providing services to the organzation.
      orgTypeId:
        $ref: '#/definitions/VerifiableOrgType'
        description: A foreign key reference to the VOType table.
      jurisdictionId:
        $ref: '#/definitions/Jurisdiction'
        description: A foreign key reference into the Jurisdiction table.
      legalName:
        type: string
        description: The Legal Name of the Verifiable Organization
      effectiveDate:
        type: string
        format: date-time
        description: The date&#x2F;time the record became active.
      endDate:
        type: string
        format: date-time
        description: The date the record became inactive. A null in the field indicates the record is active.
  VerifiableOrgType:
    type: object
    description: A list of the possible types of a Verifiable Organization, as defined by 
    required:
      - id
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Verifiable Organization Type.
      orgType:
        type: string
        description: The name of the type of Verifiable Organization, such as partnership, corporation, etc.
      description:
        type: string
        description: End user help-text information about the Verifiable Organization type.
      effectiveDate:
        type: string
        format: date-time
        description: The date upon which the Verifiable Organization type was activated for use.
      endDate:
        type: string
        format: date-time
        description: The date after which the Verifiable Organization type will no longer be used.
      displayOrder:
        format: int32
        type: integer
        description: The order of display of the Verifiable Organization type. In general, the order will be listed in the order of expected frequency.
  Location:
    type: object
    description: A location (name, address and geolocation) of a Verifiable Organization.
    required:
      - id
      - verifiableOrgId
      - locationTypeId
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Verifiable Org location.
      verifiableOrgId:
        $ref: '#/definitions/VerifiableOrg'
        description: A foreign key reference to the Verifiable Organization table.
      doingBusinessAsId:
        $ref: '#/definitions/DoingBusinessAs'
        description: An optional foreign key reference into the DoingBusinessAs table.
      locationTypeId:
        $ref: '#/definitions/LocationType'
        description: A foreign key reference to the Verifiable Organization Location Type table.
      addressee:
        type: string
        description: The Addressee Line of an official address.
      AddlDeliveryInfo:
        type: string
        description: The Additional Delivery Info of an address
      unitNumber:
        type: string
        description: The unit number of the address.
      streetAddress:
        type: string
        description: The Street Address of the location.
      municipality:
        type: string
        description: The Municipality (city, town, etc.) of the address of the location.
      province:
        type: string
        description: The province of the location.
      postalCode:
        type: string
        description: The postal code of the location.
      latLong:
        type: string
        description: The latitude and longitude of the location, if known.
      effectiveDate:
        type: string
        format: date-time
        description: The date upon which the Verifiable Organization location was active
      endDate:
        type: string
        format: date-time
        description: The date after which the Verifiable Organization location is no longer active.
  LocationType:
    type: object
    description: A list of the possible types of a Verifiable Organization location
    required:
      - id
      - locType
      - description
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Verifiable Organization Location Type.
      locType:
        type: string
        description: The name of the type of Verifiable Organization Location, such as headquarters, regional office, etc.
      description:
        type: string
        description: End user help-text information about the Verifiable Organization Location type.
      effectiveDate:
        type: string
        format: date-time
        description: The date upon which the Verifiable Organization Location type was activated for use.
      endDate:
        type: string
        format: date-time
        description: The date after which the Verifiable Organization Location type will no longer be used.
      displayOrder:
        format: int32
        type: integer
        description: The order of display of the Verifiable Organization Location type. In general, the order will be listed in the order of expected frequency.
  DoingBusinessAs:
    type: object
    description: Names under which a Verifiable Organization is Doing Business.
    required:
      - id
      - dbaName
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Verifiable Organization Location Type.
      verifiableOrgId:
        $ref: '#/definitions/VerifiableOrg'
        description: A foreign key reference into the VerfiedOrg table.
      dbaName:
        type: string
        description: The doing business as name of the business.
      effectiveDate:
        type: string
        format: date-time
        description: The date upon which the Verifiable Organization DBA record was activated for use.
      endDate:
        type: string
        format: date-time
        description: The date after which the Verifiable Organization DBA record will no longer be used.
  VerifiableClaim:
    type: object
    description: A claim of a given type, issued by a known entite
    required:
      - id
      - verifiableOrgId
      - claimType
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Verifiable Organization Claim.
      verifiableOrgId:
        $ref: '#/definitions/VerifiableOrg'
        description: A foreign key reference into the VerfiedOrg table.
      claimType:
        $ref: '#/definitions/VerifiableClaimType'
        description: A foreign key reference into the VOClaimType table.
      claimJSON:
        type: string
        description: The JSON for the claim as delivered from the 
      effectiveDate:
        type: string
        format: date-time
        description: The date the claim was received.
      endDate:
        type: string
        format: date-time
        description: The date the claim was marked as no longer valid, either because it was replaced or revoked.
      inactiveClaimReasonId:
        $ref: '#/definitions/InactiveClaimReason'
        description: A foreign key reference into the IncactiveClaimReason table.
  VerifiableClaimType:
    type: object
    description: A list of the possible types of a Verifiable Organization, as defined by 
    required:
      - id
      - claimType
      - issuerServiceId
      - issuerURL
      - claimSchemaDefinition
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Verifiable Organization Location Type.
      claimType:
        type: string
        description: A user friendly name for the claim type.
      base64Logo:
        type: string
        description: A base64-encoded logo to display as a representation of the claim.
      issuerServiceId:
        $ref: '#/definitions/IssuerService'
        description: The name of the organization that issued the claim.
      issuerURL:
        type: string
        description: The URL of the claim issuer organization.
      claimSchemaDefinition:
        type: string
        description: A pointer to the on Ledger Schema Definition for this Claim Type.
      effectiveDate:
        type: string
        format: date-time
        description: The date upon which the Verifiable Organization Claim type was activated for use.
      endDate:
        type: string
        format: date-time
        description: The date after which the Verifiable Organization Claim type will no longer be used.
  InactiveClaimReason:
    type: object
    description: A list of the possible reasons why a Claim might be inactive. 
    required:
      - id
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for an Inactive Claim Reason.
      shortReason:
        type: string
        description: A short word&#x2F;phrase for why a Claim is inactive.
      reason:
        type: string
        description: A full description for why a Claim is inactive.
      effectiveDate:
        type: string
        format: date-time
        description: The date upon which the Inactive Claim reason was activated for use.
      endDate:
        type: string
        format: date-time
        description: The date after which the Inactive Claim reason will no longer be used.
      displayOrder:
        format: int32
        type: integer
        description: The order of display Inactive Claim reason. In general, the order will be alpha.
  IssuerService:
    type: object
    description: The list of Organizations that have issued claims to Verifiable Organizations that are stored in this repository.
    required:
      - id
      - name
      - issuerOrgTLA
      - DID
      - jurisdictionId
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Issuer Org Type.
      name:
        type: string
        description: The name of the organization that issues claim.
      issuerOrgTLA:
        type: string
        description: An appreviation (aka Three Letter Acronym or TLA) of the organization that can be displayed where useful in a User Interface.
      issuerOrgURL:
        type: string
        description: A URL to the web presence of the claim issuing Organization.
      DID:
        type: string
        description: The DID of the claim issuing organization so that the organization can be accessed using the Self-Sovereign Identity network.
      jurisdictionId:
        $ref: '#/definitions/Jurisdiction'
        description: A foreign key reference into the Jurisdiction table.
      effectiveDate:
        type: string
        format: date-time
        description: The date upon which the IssuerOrg was activated for use.
      endDate:
        type: string
        format: date-time
        description: The date after which the IssuerOrg will no longer be used. The value is NULL if still active.
  Jurisdiction:
    type: object
    description: A list of the possible Jurisdiction of an Organization.
    required:
      - id
      - jurisdictionAbbrv
      - jurisdictionName
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Jurisdiction
      jurisdictionAbbrv:
        type: string
        maxLength: 25
        uniqueItems: true
        description: An abbreviation for this Jurisdiction, eg. BC.
      jurisdictionName:
        type: string
        maxLength: 1000
        uniqueItems: true
        description: The full name of the jurisdication, eg. British Columbia
      displayOrder:
        format: int32
        type: integer
        description: The order of display of the Jurisdictions. In general, the order will be alpha, with the isOnCommonList is True entries grouped first.
      isOnCommonList:
        type: boolean
        description: An indicator that a User Interface could use to display two versions of the list - a core list (e.g. Canadian entries only) that have this value as True, and an expanded list that includes all entries, regardless of the value of this field.
      effectiveDate:
        type: string
        format: date-time
        description: The date upon which the Jurisdiction was activated for use.
      endDate:
        type: string
        format: date-time
        description: The date after which the Jurisdiction will no longer be used. Null if the Jurisdiction is in active use.
  User:
    type: object
    description: Information about the users of the system.
    required:
      - id
      - givenName
      - surname
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a User.
      givenName:
        type: string
        maxLength: 100
        description: Given name of the user.
      surname:
        type: string
        maxLength: 100
        description: Surname of the user.
      email:
        type: string
        maxLength: 150
        description: The email address of the user in the system.
      userId:
        type: string
        maxLength: 500
        description: The text user ID of the user in the given Authorization Directory.
      guid:
        type: string
        maxLength: 100
        description: The GUID unique to the user as provided by the authentication system. In this case, authentication is done by Siteminder and the GUID uniquely identifies the user within the user directories managed by Siteminder - e.g. IDIR and BCeID. The GUID is equivalent to the IDIR Id, but is guaranteed unique to a person, while the IDIR ID is not - IDIR IDs can be recycled.
      authorizationDirectory:
        type: string
        maxLength: 100
        description: The name of the Authorization Directory from with which the user Id is recorded.
  Role:
    type: object
    description: A table managed in the application by authorized users to create named Roles that can be assigned to Users as needed. Roles can be created as needed to support the users of the system and the roles they perform within the organization.
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Role.
      name:
        type: string
        maxLength: 200
        description: The name of the Role, as established by the user creating the role.
      description:
        type: string
        maxLength: 1000
        description: A description of the role as set by the user creating&#x2F;updating the role.
  UserRole:
    type: object
    description: A link defining the Roles associated with each User.
    required:
      - id
      - userId
      - roleId
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a UserRole.
      userId:
        $ref: '#/definitions/User'
        description: A foreign key reference to a User.
      roleId:
        $ref: '#/definitions/Role'
        description: A foreign key reference to a Role.
  Permission:
    type: object
    description: The set of permissions defined in the application. Each permission is given a name and triggers some behavior defined in the application. For example, a permission might allow users to see data or to have access to functionality restricted to users without that permission. Permissions are created as needed to the application and are added to the permissions table by data migrations executed at the time the software that uses the permission is deployed.
    required:
      - id
      - code
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Permission.
      code:
        type: string
        maxLength: 100
        description: The name of the permission referenced in the software of the application.
      name:
        type: string
        maxLength: 100
        description: The &#39;user friendly&#39; name of the permission exposed to the user selecting the permissions to be included in a Role.
      description:
        type: string
        maxLength: 1000
        description: A description of the purpose of the permission and exposed to the user selecting the permissions to be included in a Role.
  RolePermission:
    type: object
    description: The collection of permissions included in a role.
    required:
      - id
      - roleId
      - permissionId
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Role Permission.
      roleId:
        $ref: '#/definitions/Role'
        description: A foreign key reference to a Role.
      permissionId:
        $ref: '#/definitions/Permission'
        description: A foreign key reference to a Permission.
  UserViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
      givenName:
        type: string
      surname:
        type: string
      email:
        type: string
      active:
        type: boolean
      smUserId:
        type: string
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
  CurrentUserViewModel:
    type: object
    x-codegen-viewmodel: true
    properties:
      id:
        format: int32
        type: integer
      givenName:
        type: string
      surname:
        type: string
      email:
        type: string
      active:
        type: boolean
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      smUserId:
        type: string
      smAuthorizationDirectory:
        type: string
  UserDetailsViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
      givenName:
        type: string
      surname:
        type: string
      email:
        type: string
      active:
        type: boolean
      permissions:
        type: array
        items:
          $ref: '#/definitions/PermissionViewModel'
  UserRoleViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - effectiveDate
      - userId
      - roleId
    properties:
      id:
        format: int32
        type: integer
      effectiveDate:
        type: string
        format: date-time
      expiryDate:
        type: string
        format: date-time
      roleId:
        format: int32
        type: integer
      userId:
        format: int32
        type: integer
  RoleViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      description:
        type: string
  RolePermissionViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - roleId
      - permissionId
    properties:
      id:
        format: int32
        type: integer
      roleId:
        format: int32
        type: integer
      permissionId:
        format: int32
        type: integer
  PermissionViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - code
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
      code:
        type: string
      name:
        type: string
      description:
        type: string
securityDefinitions: {}
